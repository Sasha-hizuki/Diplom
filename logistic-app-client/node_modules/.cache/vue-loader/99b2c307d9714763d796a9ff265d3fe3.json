{"remainingRequest":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\src\\views\\Orders.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\src\\views\\Orders.vue","mtime":1671145960614},{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1678708697478},{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1678708699606},{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\postcss-loader\\src\\index.js","mtime":1678708698278},{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1678708696757},{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678708696770},{"path":"C:\\Users\\512Dell\\OneDrive\\Рабочий стол\\Logistic-main\\logistic-app-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1678708698721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogIAoubGlzdCB7CiAgCiAgLm5ld19fYnRuIHsKICAgIG1hcmdpbi1ib3R0b206IDhweDsKICB9CiAgCiAgLmZpZWxkX19zZWFyY2ggewogICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtOwogIH0KICAKICAudGl0bGUgewogICAgbWFyZ2luLWJvdHRvbTogMS41cmVtOwogIH0KfQoubW9kYWwtYmlnIHsKICB6LWluZGV4OiAzOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDIwJTsKICBsZWZ0OiA2MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0yMCUpIHRyYW5zbGF0ZXgoLTUwJSk7CiAgd2lkdGg6IDkwMHB4OwogIGhlaWdodDogYXV0bzsKICBib3JkZXI6IDFweCBzb2xpZCAjRUJFQkZGOwogIGJvcmRlci1yYWRpdXM6IDAuM3JlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7CiAgcGFkZGluZzogMS41cmVtOwogIAogICZfX2Zvcm0gewogICAgJl9fY2xvc2UgewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIG9wYWNpdHk6IC44OwogICAgICBwYWRkaW5nOiAxMHB4OwogICAgICByaWdodDogMDsKICAgICAgdG9wOiAwOwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogICAgICBib3JkZXI6IDA7CiAgICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgaGVpZ2h0OiA0NHB4OwogICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgICB2aXNpYmlsaXR5OiBpbmhlcml0OwogICAgICB3aWR0aDogNDRweDsKICAgICAgCiAgICAgICY6aG92ZXIgewogICAgICAgIG9wYWNpdHk6IDE7CiAgICAgIH0KICAgICAgCiAgICAgICY6Zm9jdXMgewogICAgICAgIG91dGxpbmU6IG5vbmU7CiAgICAgIH0KICAgIH0KICB9Cn0KLm1vZGFsLXJvdXRlIHsKICB6LWluZGV4OiAzOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDUlOwogIGxlZnQ6IDYwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwJSkgdHJhbnNsYXRleCgtNTAlKTsKICB3aWR0aDogODAwcHg7CiAgaGVpZ2h0OiAyMDBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjRUJFQkZGOwogIGJvcmRlci1yYWRpdXM6IDAuM3JlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7CiAgcGFkZGluZzogMS41cmVtOwogIAogICZfX2Zvcm0gewogICAgJl9fY2xvc2UgewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIG9wYWNpdHk6IC44OwogICAgICBwYWRkaW5nOiAxMHB4OwogICAgICByaWdodDogMDsKICAgICAgdG9wOiAwOwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogICAgICBib3JkZXI6IDA7CiAgICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgaGVpZ2h0OiA0NHB4OwogICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgICB2aXNpYmlsaXR5OiBpbmhlcml0OwogICAgICB3aWR0aDogNDRweDsKICAgICAgCiAgICAgICY6aG92ZXIgewogICAgICAgIG9wYWNpdHk6IDE7CiAgICAgIH0KICAgICAgCiAgICAgICY6Zm9jdXMgewogICAgICAgIG91dGxpbmU6IG5vbmU7CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["Orders.vue"],"names":[],"mappingskBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Orders.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"list\">\n        <h1 class=\"title\">Заказы</h1>\n        <!-- <input class=\"field__search form-control form-control-sm\" type=\"text\" placeholder=\"Поиск\" v-model=\"search\">         -->\n        <div class=\"form-group\">\n            <label>Статус</label>\n            <select class=\"form-control\" v-model=\"StatusFilter\">\n                <option value=\"all\">Все</option>\n                <option value=\"0\">Ожидает выполнения</option>\n                <option value=\"1\">На загрузке</option>\n                <option value=\"2\">В пути</option>\n                <option value=\"3\">На выгрузке</option>\n                <option value=\"4\">Завершено</option>\n            </select>            \n        </div>\n        <div class=\"form-group\">\n            <label>Тип</label>\n            <select class=\"form-control\" v-model=\"TypeFilter\">\n                <option value=\"all\">Все</option>\n                <option value=\"import\">Импорт</option>\n                <option value=\"export\">Экспорт</option>\n            </select>\n        </div>\n        <button class=\"btn btn_icon btn-sm btn-secondary new__btn\"  v-on:click.prevent=\"newItem\"><i>&#43;</i><span>Добавить</span></button>\n        <Loader v-if=\"loading\"/>\n        <ul class=\"items-list\" v-else-if=\"searchItems.length\">\n            <Order\n                v-for=\"(item) of searchItems\" :key=\"item.id\"\n                v-bind:item=\"item\"\n                @remove-item=\"removeItem\"\n                @get-item=\"getItem\"\n                @show-order=\"showOrderOnMap\"\n            />\n        </ul>\n        <p v-else>Список пуст</p>\n        <div v-if=\"Form\" class=\"modal-big\">\n            <form id=\"From\" class=\"modal__form\" @submit.prevent=\"onSubmit\">           \n                <input v-if=\"item.id\" v-model=\"item.id\" type=\"hidden\">\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Дата загрузки</label>\n                        <input class=\"form-control\" name=\"StartDate\" required v-model=\"item.startDate\" type=\"date\">\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Дата доставки</label>\n                        <input class=\"form-control\" name=\"FinishDate\" required v-model=\"item.finishDate\" type=\"date\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Тип</label>\n                        <select class=\"form-control\" v-model=\"item.type\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option value=\"import\">Импорт</option>\n                            <option value=\"export\">Экспорт</option>\n                        </select>\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Водитель</label>\n                        <select class=\"form-control\" v-model=\"item.driver.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"Driver of DriversList\" :key=\"Driver.id\" :value=Driver.id>{{Driver.fio}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Автомобиль</label>\n                        <select class=\"form-control\" v-model=\"item.car.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"Car of CarsList\" :key=\"Car.id\" :value=Car.id>{{Car.brand}} {{Car.number}}</option>\n                        </select>\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Трейлер</label>\n                        <select class=\"form-control\" v-model=\"item.trailer.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"Trailer of TrailersList\" :key=\"Trailer.id\" :value=Trailer.id>{{Trailer.brand}} {{Trailer.number}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Клиент</label>\n                        <select class=\"form-control\" v-model=\"item.client.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"Client of ClientsList\" :key=\"Client.id\" :value=Client.id>{{Client.name}}</option>\n                        </select>\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Декларант</label>\n                        <select class=\"form-control\" v-model=\"item.declarant.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"Declarant of DeclarantsList\" :key=\"Declarant.id\" :value=Declarant.id>{{Declarant.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Таможня</label>\n                        <select class=\"form-control\" v-model=\"item.customs.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"Customs of CustomssList\" :key=\"Customs.id\" :value=Customs.id>{{Customs.name}}</option>\n                        </select>\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Пункт пропуска</label>\n                        <select class=\"form-control\" v-model=\"item.borderCrossing.id\">\n                            <option disabled :value=\"null\" selected hidden>Выберите один из вариантов</option>\n                            <option v-for=\"BorderCrossing of BorderCrossingsList\" :key=\"BorderCrossing.id\" :value=BorderCrossing.id>{{BorderCrossing.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Адрес загрузки</label>\n                        <input class=\"form-control\" name=\"From\" required v-model=\"item.from\" type=\"text\">\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Контакт на загрузке</label>\n                        <input class=\"form-control\" name=\"To\" required v-model=\"item.fromContact\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Адрес доставки</label>\n                        <input class=\"form-control\" name=\"To\" required v-model=\"item.to\" type=\"text\">\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Ящик компании</label>\n                        <input class=\"form-control\" name=\"To\" required v-model=\"item.toCompanyBox\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Номер контейнера</label>\n                        <input class=\"form-control\" name=\"ContainerNumber\" required v-model=\"item.containerNumber\" type=\"text\">\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Вес контейнера</label>\n                        <input class=\"form-control\" name=\"Weight\" required v-model=\"item.weight\" type=\"number\">\n                    </div>\n                </div>\n                <input class=\"btn btn-primary\" type=\"submit\" value=\"Сохранить\">\n                <button class=\"modal-big__form__close\" v-on:click.prevent=\"closeModal\"><svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1\" viewBox=\"0 0 24 24\"><path d=\"M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z\"></path></svg></button>\n            </form>\n        </div>\n        <div v-if=\"routeForm\" class=\"modal-route\">\n            <b>Информация о заказе №{{item.id}}</b>\n            <div class=\"modal__form\">\n                <div class=\"form-row\">\n                    <div class=\"col form-group\">\n                        <label>Дата выезда: {{item.startDate}}</label>\n                        <label>Дата доставки: {{item.startDate}}</label>\n                        <label>Адрес загрузки: {{item.from}}</label>                        \n                        <label>Адрес доставки: {{item.to}}</label>\n                    </div>\n                    <div class=\"col form-group\">\n                        <label>Водитель: {{item.driver.fio}}</label><br>\n                        <label>Автомобиль: {{item.car.brand}} {{item.car.model}} {{item.car.number}}</label>\n                    </div>\n                </div>\n            </div>\n            <button class=\"modal-big__form__close\" v-on:click.prevent=\"closeOrderModal\"><svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1\" viewBox=\"0 0 24 24\"><path d=\"M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z\"></path></svg></button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Loader from '@/components/Loader'\nimport Order from '@/components/Order'\nimport {Encoder} from '@/components/Encoder.js'\nexport default {\n    data(){\n        return {\n            ItemsList:[],\n            loading: true,\n            Form:false,\n            routeForm:false,\n            item:{\n                id:null,\n                driver:{id:null},\n                car:{id:null},\n                trailer:{id:null},\n                from:null,\n                FromLocation:null,\n                fromContact:null,\n                to:null,\n                ToLocation:null,\n                toCompanyBox:null,\n                weight:null,\n                containerNumber:null,\n                client:{id:null},\n                declarant:{id:null},\n                customs:{id:null},\n                borderCrossing:{id:null},\n                startDate:null,\n                finishDate:null,\n                status:null,\n                type:null,\n                CurrentLocation:null\n            },\n            DriversList:[],\n            CarsList:[],\n            TrailersList:[],\n            ClientsList:[],\n            DeclarantsList:[],\n            CustomssList:[],\n            BorderCrossingsList:[],\n            StatusFilter:\"all\",\n            TypeFilter:\"all\"\n        }\n    },\n    computed:{\n        searchItems(){\n            let filtered_data = this.ItemsList;\n            if(this.TypeFilter != 'all' ){\n                filtered_data = this.ItemsList.filter(c => c.type.toLowerCase().startsWith(this.TypeFilter))\n            }\n            if(this.StatusFilter != 'all' ){\n                filtered_data = this.ItemsList.filter(c => c.status == this.StatusFilter)\n            }\n            return filtered_data;\n        }\n    },\n    methods:{\n        async removeItem(id){\n            await fetch('https://localhost:5001/api/deliverytasks/'+id, { \n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            this.ItemsList = this.ItemsList.filter(c => c.id !== id)\n        },\n        async getItems(){\n            await fetch('https://localhost:5001/api/deliverytasks/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n           })\n            .then(response => response.json())\n            .then(json => {\n                this.ItemsList = json                \n                this.loading = false\n            })\n        },\n        async getItem(id){\n            this.closeOrderModal()\n            await this.getItemData(id).then(()=>this.openModal())\n        },\n        async getItemData(id){\n            await fetch('https://localhost:5001/api/users/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.DriversList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/cars/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.CarsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/trailers/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.TrailersList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/clients/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.ClientsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/declarants/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.DeclarantsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/customs/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.CustomssList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/bordercrossings/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.BorderCrossingsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/deliverytasks/'+id,{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.item = json;\n                this.item.startDate = this.item.startDate.split('T')[0];\n                this.item.finishDate = this.item.finishDate.split('T')[0];\n            })\n        },\n        async newItem(){\n            if(this.routeForm)\n                this.closeOrderModal();\n            await fetch('https://localhost:5001/api/users/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.DriversList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/cars/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.CarsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/trailers/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.TrailersList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/clients/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.ClientsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/declarants/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.DeclarantsList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/customs/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.CustomssList = json                \n                this.loading = false\n            })\n            await fetch('https://localhost:5001/api/bordercrossings/',{\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                }\n            })\n            .then(response => response.json())\n            .then(json => {\n                this.BorderCrossingsList = json                \n                this.loading = false\n            })\n            this.item = {\n                id:null,\n                driver:{id:null},\n                car:{id:null},\n                trailer:{id:null},\n                from:null,\n                FromLocation:null,\n                fromContact:null,\n                to:null,\n                ToLocation:null,\n                toCompanyBox:null,\n                weight:null,\n                containerNumber:null,\n                client:{id:null},\n                declarant:{id:null},\n                customs:{id:null},\n                borderCrossing:{id:null},\n                startDate:null,\n                finishDate:null,\n                status:null,\n                type:null,\n                CurrentLocation:null\n            };\n            this.openModal()\n        },\n        openModal(){            \n            this.Form = true;\n        },\n        closeModal(){\n            this.Form = false;\n            this.item = {\n                id:null,\n                driver:{id:null},\n                car:{id:null},\n                trailer:{id:null},\n                from:null,\n                FromLocation:null,\n                fromContact:null,\n                to:null,\n                ToLocation:null,\n                toCompanyBox:null,\n                weight:null,\n                containerNumber:null,\n                client:{id:null},\n                declarant:{id:null},\n                customs:{id:null},\n                borderCrossing:{id:null},\n                startDate:null,\n                finishDate:null,\n                status:null,\n                type:null,\n                CurrentLocation:null\n            };\n            this.selectedItem = null;\n        },\n        async onSubmit(){\n            await Encoder.EncodeAddress(this.item.from).then(c => this.item.FromLocation = c)\n            await Encoder.EncodeAddress(this.item.to).then(c => this.item.ToLocation = c)\n            if(this.item.id){\n                await fetch('https://localhost:5001/api/deliverytasks/'+this.item.id, \n                { \n                    method: 'PUT',\n                    body: JSON.stringify(this.item, function(key, value){\n                        if(key === \"weight\"){\n                            return parseFloat(value)\n                        }                        \n                        return value\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                    }\n                })\n                .finally(() => {                    \n                    this.getItems() \n                    this.closeModal()\n                })\n            }else{\n                this.item.status = 0\n                await fetch('https://localhost:5001/api/deliverytasks/', \n                { \n                    method: 'POST',\n                    body: JSON.stringify(this.item, function(key, value){\n                        if(key === \"weight\"){\n                            return parseFloat(value)\n                        }                         \n                        return value\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n                    }\n                })\n                .then(response => response.json())\n                .finally(() => {                    \n                    this.getItems() \n                    this.closeModal()\n                })\n            }\n            \n        },\n        async showOrderOnMap(id){\n            if(this.Form)\n                this.closeModal()\n            await this.getItemData(id).then(()=>{\n                this.$root.$refs.MapComponent.dropOrder(this.item);\n            }) \n            this.routeForm = true;           \n        },\n        closeOrderModal(){      \n            this.$root.$refs.MapComponent.removeOrder();     \n            this.routeForm = false;\n            this.item = {\n                id:null,\n                driver:{id:null},\n                car:{id:null},\n                trailer:{id:null},\n                from:null,\n                FromLocation:null,\n                fromContact:null,\n                to:null,\n                ToLocation:null,\n                toCompanyBox:null,\n                weight:null,\n                containerNumber:null,\n                client:{id:null},\n                declarant:{id:null},\n                customs:{id:null},\n                borderCrossing:{id:null},\n                startDate:null,\n                finishDate:null,\n                status:null,\n                type:null\n            };\n        }\n    },\n    async mounted(){\n        this.getItems()\n    },\n    components:{\n        Loader, Order\n    } \n}\n</script>\n\n<style lang=\"scss\">\n  \n.list {\n  \n  .new__btn {\n    margin-bottom: 8px;\n  }\n  \n  .field__search {\n    margin-bottom: 1.2rem;\n  }\n  \n  .title {\n    margin-bottom: 1.5rem;\n  }\n}\n.modal-big {\n  z-index: 3;\n  position: absolute;\n  top: 20%;\n  left: 60%;\n  transform: translateY(-20%) translatex(-50%);\n  width: 900px;\n  height: auto;\n  border: 1px solid #EBEBFF;\n  border-radius: 0.3rem;\n  background-color: $white;\n  padding: 1.5rem;\n  \n  &__form {\n    &__close {\n      position: absolute;\n      opacity: .8;\n      padding: 10px;\n      right: 0;\n      top: 0;\n      cursor: pointer;\n      background: transparent;\n      border: 0;\n      border-radius: 0;\n      box-shadow: none;\n      display: inline-block;\n      height: 44px;\n      vertical-align: top;\n      visibility: inherit;\n      width: 44px;\n      \n      &:hover {\n        opacity: 1;\n      }\n      \n      &:focus {\n        outline: none;\n      }\n    }\n  }\n}\n.modal-route {\n  z-index: 3;\n  position: absolute;\n  bottom: 5%;\n  left: 60%;\n  transform: translateY(-20%) translatex(-50%);\n  width: 800px;\n  height: 200px;\n  border: 1px solid #EBEBFF;\n  border-radius: 0.3rem;\n  background-color: $white;\n  padding: 1.5rem;\n  \n  &__form {\n    &__close {\n      position: absolute;\n      opacity: .8;\n      padding: 10px;\n      right: 0;\n      top: 0;\n      cursor: pointer;\n      background: transparent;\n      border: 0;\n      border-radius: 0;\n      box-shadow: none;\n      display: inline-block;\n      height: 44px;\n      vertical-align: top;\n      visibility: inherit;\n      width: 44px;\n      \n      &:hover {\n        opacity: 1;\n      }\n      \n      &:focus {\n        outline: none;\n      }\n    }\n  }\n}\n</style>"]}]}